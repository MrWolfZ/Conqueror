@page "/"
@inject IGetSharedCounterValueQueryHandler GetValueHandler
@inject IIncrementSharedCounterValueCommandHandler IncrementHandler

<PageTitle>Shared Counter</PageTitle>

<h1>Counter</h1>

@if (currentCount == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p role="status">Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
}

@code {
    private long? currentCount;

    private async Task IncrementCount()
    {
        var result = await IncrementHandler.WithDefaultClientPipeline().Handle(new() { IncrementBy = 1 });
        currentCount = result.ValueAfterIncrement;
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await GetValueHandler.WithDefaultClientPipeline().Handle(new());
        currentCount = result.Value;
    }
}
