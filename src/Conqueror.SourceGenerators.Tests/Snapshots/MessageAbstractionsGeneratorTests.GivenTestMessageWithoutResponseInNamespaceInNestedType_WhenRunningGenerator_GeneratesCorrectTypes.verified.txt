//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Conqueror.SourceGenerators source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using Conqueror;

namespace Generator.Tests
{
    partial class Container 
    {

    /// <summary>
    /// Message Types for <see cref="global::Generator.Tests.Container.TestMessageWithoutResponse" />
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.MessageAbstractionsGenerator", "0.7.0-beta.1")]
    partial record TestMessageWithoutResponse
    {
         public interface IHandler : IGeneratedMessageHandler<TestMessageWithoutResponse, IPipeline>
         {
             [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
             static THandlerInterface? IGeneratedMessageHandler.Create<THandlerInterface>(IMessageHandlerProxyFactory proxyFactory)
                 where THandlerInterface : class
                 => new Adapter(proxyFactory) as THandlerInterface;

             [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
             public sealed class Adapter(IMessageHandlerProxyFactory proxyFactory)
                 : GeneratedMessageHandlerAdapter<TestMessageWithoutResponse>(proxyFactory.CreateProxy<TestMessageWithoutResponse, UnitMessageResponse>()),
                   IHandler;
         }
         
         public interface IPipeline : IGeneratedMessagePipeline<TestMessageWithoutResponse, UnitMessageResponse, IPipeline>
         {
             [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
             static IPipeline IGeneratedMessagePipeline<TestMessageWithoutResponse, UnitMessageResponse, IPipeline>.Create(
                 IMessagePipeline<TestMessageWithoutResponse, UnitMessageResponse> wrapped)
                 => new Adapter(wrapped);
            
             [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
             public sealed class Adapter(IMessagePipeline<TestMessageWithoutResponse, UnitMessageResponse> wrapped)
                 : GeneratedMessagePipelineAdapter<TestMessageWithoutResponse, UnitMessageResponse>(wrapped),
                   IPipeline;
         }
    }
    }
}
