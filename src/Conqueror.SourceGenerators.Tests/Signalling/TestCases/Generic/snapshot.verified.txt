Conqueror.SourceGenerators/Conqueror.SourceGenerators.Signalling.SignalTypeGenerator/Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignal_TFirst._TSecond__ConquerorSignalType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic
{
    /// <summary>
    ///     Signal types for <see cref="global::Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignal<TFirst, TSecond>" />.
    /// </summary>
    partial record TestSignal<TFirst, TSecond> : global::Conqueror.ISignal<TestSignal<TFirst, TSecond>>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
        public static global::Conqueror.SignalTypes<TestSignal<TFirst, TSecond>, IHandler> T => new();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
        public partial interface IHandler : global::Conqueror.ISignalHandler<TestSignal<TFirst, TSecond>, IHandler, IHandler.Proxy>
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
            global::System.Threading.Tasks.Task Handle(TestSignal<TFirst, TSecond> signal, global::System.Threading.CancellationToken cancellationToken = default);

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
            static global::System.Threading.Tasks.Task global::Conqueror.ISignalHandler<TestSignal<TFirst, TSecond>, IHandler>.Invoke(IHandler handler, TestSignal<TFirst, TSecond> signal, global::System.Threading.CancellationToken cancellationToken)
                => handler.Handle(signal, cancellationToken);

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
            public sealed class Proxy : global::Conqueror.SignalHandlerProxy<TestSignal<TFirst, TSecond>, IHandler, Proxy>, IHandler;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
        static TestSignal<TFirst, TSecond> global::Conqueror.ISignal<TestSignal<TFirst, TSecond>>.EmptyInstance => new();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::System.Reflection.ConstructorInfo> global::Conqueror.ISignal<TestSignal<TFirst, TSecond>>.PublicConstructors
            => typeof(TestSignal<TFirst, TSecond>).GetConstructors(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::System.Reflection.PropertyInfo> global::Conqueror.ISignal<TestSignal<TFirst, TSecond>>.PublicProperties
            => typeof(TestSignal<TFirst, TSecond>).GetProperties(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);
    }
}

Conqueror.SourceGenerators/Conqueror.SourceGenerators.Signalling.SignalHandlerTypeGenerator/Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignalHandler_TFirst._TSecond__ConquerorSignalHandlerType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic
{
    partial class TestSignalHandler<TFirst, TSecond>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalHandlerTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::Conqueror.ISignalHandlerTypesInjector> global::Conqueror.ISignalHandler.GetTypeInjectors()
        {
            yield return global::Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignal<TFirst, TSecond>.IHandler.CreateCoreTypesInjector<TestSignalHandler<TFirst, TSecond>>();
        }
    }
}

Conqueror.SourceGenerators/Conqueror.SourceGenerators.Signalling.SignalHandlerTypeGenerator/Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignalHandler2_ConquerorSignalHandlerType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic
{
    partial class TestSignalHandler2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalHandlerTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::Conqueror.ISignalHandlerTypesInjector> global::Conqueror.ISignalHandler.GetTypeInjectors()
        {
            yield return global::Conqueror.SourceGenerators.Tests.Signalling.TestCases.Generic.TestSignal<string, int>.IHandler.CreateCoreTypesInjector<TestSignalHandler2>();
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Signalling.SignalHandlerTypeGenerator", "FIXED_VERSION")]
        [global::System.Runtime.CompilerServices.ModuleInitializer]
        public static void ModuleInitializer()
            => global::Conqueror.SignalHandlerTypeServiceRegistry.RegisterHandlerType<TestSignalHandler2>();
    }
}
