Conqueror.SourceGenerators/Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator/Generator.Tests.TestEventNotification_TPayload__EventNotificationTypes.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Generator.Tests
{
    /// <summary>
    ///     Event notification types for <see cref="global::Generator.Tests.TestEventNotification<TPayload>" />.
    /// </summary>
    partial record TestEventNotification<TPayload> : global::Conqueror.IEventNotification<TestEventNotification<TPayload>>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public static global::Conqueror.EventNotificationTypes<TestEventNotification<TPayload>> T => global::Conqueror.EventNotificationTypes<TestEventNotification<TPayload>>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public interface IHandler : global::Conqueror.IGeneratedEventNotificationHandler<TestEventNotification<TPayload>>
        {
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
            public sealed class Adapter : global::Conqueror.GeneratedEventNotificationHandlerAdapter<TestEventNotification<TPayload>>, IHandler;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static TestEventNotification<TPayload>? global::Conqueror.IEventNotification<TestEventNotification<TPayload>>.EmptyInstance => null;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::Conqueror.IDefaultEventNotificationTypesInjector global::Conqueror.IEventNotification<TestEventNotification<TPayload>>.DefaultTypeInjector
            => global::Conqueror.DefaultEventNotificationTypesInjector<TestEventNotification<TPayload>, IHandler, IHandler.Adapter>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::System.Collections.Generic.IReadOnlyCollection<global::Conqueror.IEventNotificationTypesInjector> global::Conqueror.IEventNotification<TestEventNotification<TPayload>>.TypeInjectors
            => global::Conqueror.IEventNotificationTypesInjector.GetTypeInjectorsForEventNotificationType<TestEventNotification<TPayload>>();
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public static class TestEventNotification__TPayload__HandlerExtensions_7303585135158265659
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public static global::Generator.Tests.TestEventNotification<TPayload>.IHandler AsIHandler<TPayload>(this global::Conqueror.IEventNotificationHandler<global::Generator.Tests.TestEventNotification<TPayload>> handler)
            where TPayload : ITest
            => global::Conqueror.EventNotificationHandlerExtensions.AsIHandler<global::Generator.Tests.TestEventNotification<TPayload>, global::Generator.Tests.TestEventNotification<TPayload>.IHandler>(handler);
    }
}
