Conqueror.SourceGenerators/Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator/Generator.Tests.TestEventNotification_EventNotificationTypes.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Generator.Tests
{
    /// <summary>
    ///     Event notification types for <see cref="global::Generator.Tests.TestEventNotification" />.
    /// </summary>
    partial record TestEventNotification : global::Conqueror.IEventNotification<TestEventNotification>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public static global::Conqueror.EventNotificationTypes<TestEventNotification> T => global::Conqueror.EventNotificationTypes<TestEventNotification>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public partial interface IHandler : global::Conqueror.IGeneratedEventNotificationHandler<TestEventNotification>
        {
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
            public sealed class Adapter : global::Conqueror.GeneratedEventNotificationHandlerAdapter<TestEventNotification>, IHandler;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static TestEventNotification? global::Conqueror.IEventNotification<TestEventNotification>.EmptyInstance => null;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::Conqueror.IDefaultEventNotificationTypesInjector global::Conqueror.IEventNotification<TestEventNotification>.DefaultTypeInjector
            => global::Conqueror.DefaultEventNotificationTypesInjector<TestEventNotification, IHandler, IHandler.Adapter>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::System.Collections.Generic.IReadOnlyCollection<global::Conqueror.IEventNotificationTypesInjector> global::Conqueror.IEventNotification<TestEventNotification>.TypeInjectors
            => global::Conqueror.IEventNotificationTypesInjector.GetTypeInjectorsForEventNotificationType<TestEventNotification>();
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public static class TestEventNotificationHandlerExtensions_8696178407353245756
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Eventing.EventingAbstractionsGenerator", "FIXED_VERSION")]
        public static global::Generator.Tests.TestEventNotification.IHandler AsIHandler(this global::Conqueror.IEventNotificationHandler<global::Generator.Tests.TestEventNotification> handler)
            => global::Conqueror.EventNotificationHandlerExtensions.AsIHandler<global::Generator.Tests.TestEventNotification, global::Generator.Tests.TestEventNotification.IHandler>(handler);
    }
}
