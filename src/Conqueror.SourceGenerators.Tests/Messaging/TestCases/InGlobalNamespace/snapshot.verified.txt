Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageTypeGenerator/GlobalTestMessage_ConquerorMessageType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

/// <summary>
///     Message types for <see cref="global::GlobalTestMessage" />.
/// </summary>
partial record GlobalTestMessage : global::Conqueror.IMessage<GlobalTestMessage, global::GlobalTestMessageResponse>
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public static global::Conqueror.MessageTypes<GlobalTestMessage, global::GlobalTestMessageResponse, IHandler> T => new();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public partial interface IHandler : global::Conqueror.IMessageHandler<GlobalTestMessage, global::GlobalTestMessageResponse, IHandler, IHandler.Proxy, IPipeline, IPipeline.Proxy>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        global::System.Threading.Tasks.Task<global::GlobalTestMessageResponse> Handle(GlobalTestMessage message, global::System.Threading.CancellationToken cancellationToken = default);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        static global::System.Threading.Tasks.Task<global::GlobalTestMessageResponse> global::Conqueror.IMessageHandler<GlobalTestMessage, global::GlobalTestMessageResponse, IHandler>.Invoke(IHandler handler, GlobalTestMessage message, global::System.Threading.CancellationToken cancellationToken)
            => handler.Handle(message, cancellationToken);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public sealed class Proxy : global::Conqueror.MessageHandlerProxy<GlobalTestMessage, global::GlobalTestMessageResponse, IHandler, Proxy>, IHandler;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public partial interface IPipeline : global::Conqueror.IMessagePipeline<GlobalTestMessage, global::GlobalTestMessageResponse>
    {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public sealed class Proxy : global::Conqueror.MessagePipelineProxy<GlobalTestMessage, global::GlobalTestMessageResponse>, IPipeline;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static GlobalTestMessage global::Conqueror.IMessage<GlobalTestMessage, global::GlobalTestMessageResponse>.EmptyInstance => new();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::System.Reflection.ConstructorInfo> global::Conqueror.IMessage<GlobalTestMessage, global::GlobalTestMessageResponse>.PublicConstructors
        => typeof(GlobalTestMessage).GetConstructors(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::System.Reflection.PropertyInfo> global::Conqueror.IMessage<GlobalTestMessage, global::GlobalTestMessageResponse>.PublicProperties
        => typeof(GlobalTestMessage).GetProperties(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);
}

Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator/GlobalTestMessageHandler_ConquerorMessageHandlerType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

partial class GlobalTestMessageHandler
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::Conqueror.IMessageHandlerTypesInjector> global::Conqueror.IMessageHandler.GetTypeInjectors()
    {
        yield return global::GlobalTestMessage.IHandler.CreateCoreTypesInjector<GlobalTestMessageHandler>();
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator", "FIXED_VERSION")]
    [global::System.Runtime.CompilerServices.ModuleInitializer]
    public static void ModuleInitializer()
        => global::Conqueror.MessageHandlerTypeServiceRegistry.RegisterHandlerType<GlobalTestMessageHandler>();
}
