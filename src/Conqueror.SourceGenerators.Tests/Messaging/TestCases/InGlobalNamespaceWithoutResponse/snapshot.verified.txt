Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageTypeGenerator/GlobalTestMessageWithoutResponse_ConquerorMessageType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

/// <summary>
///     Message types for <see cref="global::GlobalTestMessageWithoutResponse" />.
/// </summary>
partial record GlobalTestMessageWithoutResponse : global::Conqueror.IMessage<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public static global::Conqueror.MessageTypes<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler> T => new();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public partial interface IHandler : global::Conqueror.IMessageHandler<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler, IHandler.Proxy, IPipeline, IPipeline.Proxy>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        global::System.Threading.Tasks.Task
 Handle(GlobalTestMessageWithoutResponse message, global::System.Threading.CancellationToken cancellationToken = default);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        static async global::System.Threading.Tasks.Task<global::Conqueror.UnitMessageResponse> global::Conqueror.IMessageHandler<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler>.Invoke(IHandler handler, GlobalTestMessageWithoutResponse message, global::System.Threading.CancellationToken cancellationToken)
        {
            await handler.Handle(message, cancellationToken).ConfigureAwait(false);
            return global::Conqueror.UnitMessageResponse.Instance;
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public sealed class Proxy : global::Conqueror.MessageHandlerProxy<GlobalTestMessageWithoutResponse, IHandler, Proxy>, IHandler;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    public partial interface IPipeline : global::Conqueror.IMessagePipeline<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>
    {
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public sealed class Proxy : global::Conqueror.MessagePipelineProxy<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>, IPipeline;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static GlobalTestMessageWithoutResponse global::Conqueror.IMessage<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.EmptyInstance => new();

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::System.Reflection.ConstructorInfo> global::Conqueror.IMessage<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.PublicConstructors
        => typeof(GlobalTestMessageWithoutResponse).GetConstructors(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::System.Reflection.PropertyInfo> global::Conqueror.IMessage<GlobalTestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.PublicProperties
        => typeof(GlobalTestMessageWithoutResponse).GetProperties(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);
}

Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator/GlobalTestMessageWithoutResponseHandler_ConquerorMessageHandlerType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

partial class GlobalTestMessageWithoutResponseHandler
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator", "FIXED_VERSION")]
    static global::System.Collections.Generic.IEnumerable<global::Conqueror.IMessageHandlerTypesInjector> global::Conqueror.IMessageHandler.GetTypeInjectors()
    {
        yield return global::GlobalTestMessageWithoutResponse.IHandler.CreateCoreTypesInjector<GlobalTestMessageWithoutResponseHandler>();
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageHandlerTypeGenerator", "FIXED_VERSION")]
    [global::System.Runtime.CompilerServices.ModuleInitializer]
    public static void ModuleInitializer()
        => global::Conqueror.MessageHandlerTypeServiceRegistry.RegisterHandlerType<GlobalTestMessageWithoutResponseHandler>();
}
