//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Conqueror.SourceGenerators source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using Conqueror;

namespace Generator.Tests
{
    /// <summary>
    /// Message Types for <see cref="global::Generator.Tests.TestMessage" />
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
    partial record TestMessage : IMessage<TestMessage, TestMessageResponse>
    {
        public static MessageTypes<TestMessage, TestMessageResponse> T => MessageTypes<TestMessage, TestMessageResponse>.Default;

        public interface IHandler : IGeneratedMessageHandler<TestMessage, TestMessageResponse, IPipeline>;
         
        public interface IPipeline : IMessagePipeline<TestMessage, TestMessageResponse>
        {
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            public sealed class Adapter : GeneratedMessagePipelineAdapter<TestMessage, TestMessageResponse>, IPipeline;
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static TestMessage IMessage<TestMessage, TestMessageResponse>.EmptyInstance => new();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::Conqueror.IDefaultMessageTypesInjector global::Conqueror.IMessage<TestMessage, TestMessageResponse>.DefaultTypeInjector
            => global::Conqueror.DefaultMessageTypesInjector<TestMessage, TestMessageResponse, IPipeline, IPipeline.Adapter>.Default;

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::System.Collections.Generic.IReadOnlyCollection<IMessageTypesInjector> global::Conqueror.IMessage<TestMessage, TestMessageResponse>.TypeInjectors
            => global::Conqueror.IMessageTypesInjector.GetTypeInjectorsForMessageType<TestMessage>();
    }
}
