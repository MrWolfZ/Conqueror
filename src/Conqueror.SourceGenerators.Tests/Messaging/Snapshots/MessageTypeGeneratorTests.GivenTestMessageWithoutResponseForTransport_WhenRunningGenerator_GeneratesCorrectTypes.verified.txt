Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageTypeGenerator/Generator.Tests.TestMessageWithoutResponse_ConquerorMessageType.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Generator.Tests
{
    /// <summary>
    ///     Message types for <see cref="global::Generator.Tests.TestMessageWithoutResponse" />.
    /// </summary>
    partial record TestMessageWithoutResponse : global::Conqueror.IMessage<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public static global::Conqueror.MessageTypes<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler> T => new();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public partial interface IHandler : global::Conqueror.IMessageHandler<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler, IHandler.Proxy, IPipeline, IPipeline.Proxy>
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
            global::System.Threading.Tasks.Task
 Handle(TestMessageWithoutResponse message, global::System.Threading.CancellationToken cancellationToken = default);

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
            static async global::System.Threading.Tasks.Task<global::Conqueror.UnitMessageResponse> global::Conqueror.IMessageHandler<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler>.Invoke(IHandler handler, TestMessageWithoutResponse message, global::System.Threading.CancellationToken cancellationToken)
            {
                await handler.Handle(message, cancellationToken).ConfigureAwait(false);
                return global::Conqueror.UnitMessageResponse.Instance;
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
            public sealed class Proxy : global::Conqueror.MessageHandlerProxy<TestMessageWithoutResponse, IHandler, Proxy>, IHandler;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public partial interface IPipeline : global::Conqueror.IMessagePipeline<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>
        {
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
            public sealed class Proxy : global::Conqueror.MessagePipelineProxy<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>, IPipeline;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        static TestMessageWithoutResponse global::Conqueror.IMessage<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.EmptyInstance => new();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::System.Reflection.ConstructorInfo> global::Conqueror.IMessage<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.PublicConstructors
            => typeof(TestMessageWithoutResponse).GetConstructors(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        static global::System.Collections.Generic.IEnumerable<global::System.Reflection.PropertyInfo> global::Conqueror.IMessage<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>.PublicProperties
            => typeof(TestMessageWithoutResponse).GetProperties(global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.Instance);
    }

    partial record TestMessageWithoutResponse : global::Generator.Tests.ITestTransportMessage<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse>
    {
        partial interface IHandler : global::Generator.Tests.ITestTransportMessageHandler<TestMessageWithoutResponse, global::Conqueror.UnitMessageResponse, IHandler>;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public static string StringProperty => "Test";

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public static int IntProperty => 1;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public static int[] IntArrayProperty => new[] { 1, 2, 3 };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageTypeGenerator", "FIXED_VERSION")]
        public static string? NullProperty => null;
    }
}
