Conqueror.SourceGenerators/Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator/Generator.Tests.TestMessage_MessageTypes.g.cs:
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Conqueror source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Generator.Tests
{
    /// <summary>
    ///     Message Types for <see cref="global::Generator.Tests.TestMessage" />.
    /// </summary>
    partial record TestMessage : global::Conqueror.IMessage<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        public static global::Conqueror.MessageTypes<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>> T => global::Conqueror.MessageTypes<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        public interface IHandler : global::Conqueror.IGeneratedMessageHandler<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>, IPipeline>;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        public interface IPipeline : global::Conqueror.IMessagePipeline<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>
        {
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
            public sealed class Adapter : global::Conqueror.GeneratedMessagePipelineAdapter<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>, IPipeline;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static TestMessage global::Conqueror.IMessage<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>.EmptyInstance => new();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::Conqueror.IDefaultMessageTypesInjector global::Conqueror.IMessage<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>.DefaultTypeInjector
            => global::Conqueror.DefaultMessageTypesInjector<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>, IPipeline, IPipeline.Adapter>.Default;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Conqueror.SourceGenerators.Messaging.MessageAbstractionsGenerator", "FIXED_VERSION")]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        static global::System.Collections.Generic.IReadOnlyCollection<global::Conqueror.IMessageTypesInjector> global::Conqueror.IMessage<TestMessage, global::System.Collections.Generic.List<global::Generator.Tests.TestMessageResponse>>.TypeInjectors
            => global::Conqueror.IMessageTypesInjector.GetTypeInjectorsForMessageType<TestMessage>();
    }
}
