<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="../.targets/lib.targets" />

    <PropertyGroup>
        <Nullable>enable</Nullable>
        <IsPackable>true</IsPackable>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>

        <TargetFrameworks>netstandard2.0</TargetFrameworks>

        <!--
            This is required because OmniSharp (VSCode) calls the build in a way
            that will skip resource generation. Without this line, OmniSharp won't
            find the generated .cs files and analysis will fail.
        -->
        <CoreCompileDependsOn>PrepareResources;$(CompileDependsOn)</CoreCompileDependsOn>

        <!--
            Set up build target to copy analyzer DLLs to correct target path in nuget package
        -->
        <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddAnalyzersToOutput</TargetsForTfmSpecificContentInPackage>
        <RoslynVersion>4.8</RoslynVersion>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    </PropertyGroup>

    <!-- for NuGet -->
    <PropertyGroup>
        <Description>Part of the Conqueror library set. Source generators for all core packages.</Description>
        <PackageTags>$(PackageTags) analyzers</PackageTags>
        <DevelopmentDependency>true</DevelopmentDependency>
        <NoPackageAnalysis>true</NoPackageAnalysis>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.9.2" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.9.2" />
    </ItemGroup>

    <Target Name="_AddAnalyzersToOutput">
        <ItemGroup>
            <TfmSpecificPackageFile Include="$(OutputPath)/Conqueror.SourceGenerators.dll" PackagePath="analyzers/dotnet/roslyn$(RoslynVersion)/cs" />
        </ItemGroup>
    </Target>

</Project>
