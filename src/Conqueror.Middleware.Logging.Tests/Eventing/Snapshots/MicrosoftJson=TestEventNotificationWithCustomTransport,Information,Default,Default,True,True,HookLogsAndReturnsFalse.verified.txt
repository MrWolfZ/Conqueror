{"EventId":0,"LogLevel":"Information","Category":"CustomCategory_TestEventNotificationWithCustomTransport","Message":"PreHook:TestEventNotificationWithCustomTransport,test-message-id,test-trace-id","State":{"Message":"PreHook:TestEventNotificationWithCustomTransport,test-message-id,test-trace-id","EventNotificationType":"TestEventNotificationWithCustomTransport","EventNotificationId":"test-message-id","TraceId":"test-trace-id","{OriginalFormat}":"PreHook:{EventNotificationType},{EventNotificationId},{TraceId}"}}
{"EventId":0,"LogLevel":"Error","Category":"CustomCategory_TestEventNotificationWithCustomTransport","Message":"ExceptionHook:TestException,test-message-id,test-trace-id","Exception":"Conqueror.Middleware.Logging.Tests.Eventing.LoggingMiddlewareTestEventNotifications\u002BTestException: test exception\n   at Conqueror.Middleware.Logging.Tests.Eventing.LoggingMiddlewareTestEventNotifications.TestEventNotificationWithCustomTransportHandler.Handle(TestEventNotificationWithCustomTransport notification, CancellationToken cancellationToken) in {ProjectDirectory}Eventing/LoggingMiddlewareTestEventNotifications.cs:line 721\n   at Conqueror.Middleware.Logging.Eventing.LoggingEventNotificationMiddleware\u00601.Execute(EventNotificationMiddlewareContext\u00601 ctx) in {SolutionDirectory}src/Conqueror.Middleware.Logging/Eventing/LoggingEventNotificationMiddleware.cs:line 51\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine\u0026 stateMachine)\n   at Conqueror.Middleware.Logging.Eventing.LoggingEventNotificationMiddleware\u00601.Execute(EventNotificationMiddlewareContext\u00601 ctx)\n   at Conqueror.Eventing.EventNotificationPipelineRunner\u00601.\u003C\u003Ec__DisplayClass3_2.\u003CExecute\u003Eb__1(TEventNotification notification, CancellationToken token) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationPipelineRunner.cs:line 36\n   at Conqueror.Eventing.EventNotificationPipelineRunner\u00601.Execute(IServiceProvider serviceProvider, TEventNotification initialEventNotification, IEventNotificationPublisher\u00601 transportClient, EventNotificationTransportType transportType, CancellationToken cancellationToken) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationPipelineRunner.cs:line 40\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine\u0026 stateMachine)\n   at Conqueror.Eventing.EventNotificationPipelineRunner\u00601.Execute(IServiceProvider serviceProvider, TEventNotification initialEventNotification, IEventNotificationPublisher\u00601 transportClient, EventNotificationTransportType transportType, CancellationToken cancellationToken)\n   at Conqueror.Eventing.EventNotificationHandlerProxy\u00601.Handle(TEventNotification notification, CancellationToken cancellationToken) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationHandlerProxy.cs:line 46\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine\u0026 stateMachine)\n   at Conqueror.Eventing.EventNotificationHandlerProxy\u00601.Handle(TEventNotification notification, CancellationToken cancellationToken)\n   at Conqueror.Eventing.EventNotificationHandlerInvoker\u00601.Invoke(IServiceProvider serviceProvider, Object notification, String transportTypeName, CancellationToken cancellationToken) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationHandlerInvoker.cs:line 20\n   at Conqueror.Eventing.EventNotificationHandlerInvokerForEventNotificationType\u00602.Invoke[TEventNotification](IServiceProvider serviceProvider, TEventNotification notification, String transportTypeName, CancellationToken cancellationToken) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationReceiverHandlerInvoker.cs:line 63\n   at Conqueror.Eventing.EventNotificationReceiverHandlerInvoker\u00602.Invoke[TEventNotification](IServiceProvider serviceProvider, TEventNotification notification, String transportTypeName, CancellationToken cancellationToken) in {SolutionDirectory}src/Conqueror/Eventing/EventNotificationReceiverHandlerInvoker.cs:line 39","State":{"Message":"ExceptionHook:TestException,test-message-id,test-trace-id","ExceptionType":"TestException","EventNotificationId":"test-message-id","TraceId":"test-trace-id","{OriginalFormat}":"ExceptionHook:{ExceptionType},{EventNotificationId},{TraceId}"}}
