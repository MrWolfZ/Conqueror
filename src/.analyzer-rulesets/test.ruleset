<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="test.ruleset" ToolsVersion="16.0">
    <Include Path="full.ruleset" Action="Default" />
    <Include Path="nunit.ruleset" Action="Default" />

    <!-- overrule some specific rules for test projects -->
    <Rules AnalyzerId="Microsoft.CodeQuality.Analyzers" RuleNamespace="Microsoft.CodeQuality.Analyzers">
        <!-- remove need for standard exception constructors in test code -->
        <Rule Id="CA1032" Action="None" />

        <!-- allow public nested classes, which we often use to make assembly scanning work -->
        <Rule Id="CA1034" Action="None" />

        <!-- allow private exceptions, which are useful for testing -->
        <Rule Id="CA1064" Action="None" />

        <!-- allow underscores in identifiers (necessary for test naming conventions) -->
        <Rule Id="CA1707" Action="None" />

        <!-- do not suggest 'static readonly' fields over constant array arguments since we often construct ad-hoc arrays for assertions -->
        <Rule Id="CA1861" Action="None" />

        <!-- it is fine to await tasks directly in test code -->
        <Rule Id="CA2007" Action="None" />

        <!-- in controller integration tests we want to provide relative URIs as plain strings -->
        <Rule Id="CA2234" Action="None" />
    </Rules>

    <Rules AnalyzerId="SonarAnalyzer.CSharp" RuleNamespace="SonarAnalyzer.CSharp">
        <!-- disable ordering constraints so that we can mix public and private types, which is often useful for nested test classes -->
        <Rule Id="SA1202" Action="None" />

        <!-- allow multiple types per file since it is a useful pattern to have a test base classes with multiple variants -->
        <Rule Id="SA1402" Action="None" />
    </Rules>
</RuleSet>
